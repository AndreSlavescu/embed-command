> Would this make more sense as `wp post oembed`, given caches are tied specifically to posts?

This is likely going to change in the near future, see https://core.trac.wordpress.org/ticket/34115.

> Could you share some examples of how each command would work?

I haven't really thought it through yet, but it could work like this:

```
wp oembed get/fetch <url> [--skip-cache] [--format] [--width] [--height] [--limit-response-size] [--raw]
```

* `--skip-cache`: Do not check the db for cached data
* `--format`: xml or json
* `--c`: Limit response size using the `oembed_remote_get_args` filter
* `--raw`: Get the raw json/xml response instead of the resulting HTML code (i.e. do not use `\WP_oEmbed::data2html()`)
* `--dry-run` ?

```
wp oembed clear-cache [url] [--post-id]
```

Maybe we could even have a command to reload these URLs again using `wp oembed get`. Related:
https://core.trac.wordpress.org/ticket/30720

```
wp oembed provider list
```

Adding and removing providers through WP-CLI would be interesting for debugging, but since the list is not persistent, it's
probably not possible.

------

Maybe there are more possibilities, but those are the ones I can think of right now.
